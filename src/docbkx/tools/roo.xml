<?xml version="1.0" encoding="utf-8"?>
<section id="tools-roo">
  <title>Jolokia Roo Addon</title>
  <para>
    The Jolokia <ulink url="http://www.springsource.org/roo">Roo</ulink> addon allows for easy
    integration of an agent servlet in an existing Roo web
    project. 
  </para>
  <note>
    <para>
      This addon has been submitted to the Roobot, a central Roo addon
      registry. Until it is publicly available you can directly
      install the addon from our repository.
    </para>
    <programlisting><![CDATA[
roo> osgi obr url add --url http://labs.consol.de/maven/repository/roo-repository.xml
roo> osgi obr start --bundleSymbolicName org.jolokia.roo]]></programlisting>
    <para>
      Alteratively, if there are problems with the approach above
      (which is currently the case because the hard coded public PGP
      keyserver which is used by Roo 1.1.1 is down) and you don't need
      PGP verification, you can install the addon bundle directly from
      our repository:
    </para>
    <programlisting><![CDATA[
roo> osgi start --url http://labs.consol.de/maven/repository/org/jolokia/jolokia-roo/0.83/jolokia-roo-0.83.jar]]></programlisting>
  </note> 
  <para>
    As soon as <filename>src/main/webapp/WEB-INF/web.xml</filename>
    is available in the roo project, Jolokia can be setup with the
    command <command>jolokia setup</command>. This will add the
    proper dependency in the <filename>pom.xml</filename> and adapt
    <filename>web.xml</filename> so that an agent servlet gets
    registered under the subcontext <literal>jolokia</literal> (so,
    when you web application is deployed under the context
    <literal>/mywebapp</literal>, the agent is reachable under
    <literal>/mywebapp/jolokia</literal>. This command knows about
    the options described in <xref linkend="table-roo-options"/>,
    all of which are optional.
  </para>
  <table id="table-roo-options">
    <title>jolokia setup Options</title>
    <thead>
      <tr>
        <td>Option</td>
        <td>Description</td>
      </tr>
    </thead>
    <tr>
      <td><literal>--addPolicy</literal></td>
      <td>
        This adds an additional
        <filename>jolokia-access.xml</filename> below
        <filename>src/main/resources</filename> to allow putting
        access restrictions into place. The installed template,
        however, doesn't come with any restriction but contains
        sample configurations commented out.
      </td>
    </tr>
    <tr>
      <td><literal>--addJsr160Proxy</literal></td>
      <td>
        Adapts the agent servlet's <constant>init-param</constant>
        to add an additional
        <classname>org.jolokia.jsr160.Jsr160RequestDispatcher</classname>
        request dispatcher which allows the installed servlet to act
        as an JSR-160 proxy. See <xref linkend="proxy"/> for details
        about the JSR-160 proxy
      </td>
    </tr>
    <tr>
      <td><literal>--addDefaultInitParams</literal></td>
      <td>By default, the servlet gets registered without any init
      parametes. With this option, all available
      <literal>init-param</literal> are added to the servlet
      definition with their default values.</td>
    </tr>      
  </table>
</section>
