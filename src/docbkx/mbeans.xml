<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2009-2013 Roland Huss
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<chapter id="mbeans">
  <title>Jolokia MBeans</title>
  <para>
    Besides bridging JMX to the HTTP/JSON world, the Jolokia agents
    also install their own MBeans which provide the extra services 
    described in this chapter.
  </para>
  <section id="mbean-config">
    <title>Configuration MBean</title>
    <para>
      This MBean, which is registered under the name <emphasis
      role="bold">jolokia:type=Config</emphasis>, allows changing
      configuration parameters. Changes are non-persistent and get
      lost after a restart of the hosting application
      server. Debugging mode and the history store can be configured with
      this MBean.
    </para>
    <section id="mbean-debugging">
      <title>Debugging</title>
      <para>
        Debugging can be switched on by setting the attribute
        <literal>Debug</literal>. When debugging is switched on, the
        Jolokia agent will store debug information in a ring buffer in
        memory, whose size can be tuned with the attribute
        <literal>MaxDebugEntries</literal>. The debug information can
        be fetched by the operation <literal>debugInfo</literal>. This
        debugging output will contain the JSON responses (which in
        turn contain their requests) sent to the client. Finally, the
        operation <literal>resetDebugInfo</literal> clears the debug
        history. 
      </para>
    </section>
    <section id="mbean-history">
      <title>History store</title>
      <para>
        The <emphasis>history store</emphasis> can be used to remember
        attribute and return values within the agent's memory. The
        Nagios check <command>check_jmx4perl</command>, for instance,
        uses this feature for its delta check, which measures
        changes in attribute values. In order to
        switch on history tracking, two operations are provided:
      </para>
      <variablelist>
        <varlistentry>
          <term><emphasis role="bold">setHistoryLimitForOperation</emphasis></term>
          <listitem>              
            JMX operation for switching on tracking of the execution of
            JMX operations. It takes five arguments: The MBean and
            operation name, an optional target URL when the agent
            is used in proxy mode and as limit the number of maximal
            entries to track and a duration in seconds. 
            If the target URL is given, then
            request for this specific target are tracked,
            otherwise, if the URL is null, requests to this
            operation on the local agent are tracked.  The return
            value of calling this operations is stored in a 
            buffer with the specified length, where the oldest
            elements will be shifted out in case of an overflow. 
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis role="bold">setHistoryLimitForAttribute</emphasis></term>
          <listitem>              
            JMX operation for switching on tracking of an JMX
            attribute's value. It takes six arguments: The MBean and
            attribute name, an optional path and target URL and as
            limit the maximal number of entries to remember and/or an
            maximum duration for the elements to keep in the
            history. As above, the target URL is only used for proxy
            requests. The path can be used to store only read requests
            with the given path.
            </listitem>
        </varlistentry>
      </variablelist>
      <para>
       There are two kinds of limits which can be applied: Either by a
       maximum number of historical values to remember or a maximum
       duration for the values to keep. If both limits are given in a
       configuration call on the MBean above, both limits are
       applied. In any case, there are never more values remembered
       than the global limit which can be set and retrieved with
       attribute <constant>HistoryMaxEntries</constant>. 
      </para>
      <para>
        The History store can be emptied with a call to the operation
        <methodname>resetHistoryEntries</methodname>. This also
        switches off all history tracking. 
      </para>
      <para>
        If for a request history tracking is switched on, the JSON
        response will contain an extra field
        <constant>history</constant> which contains a list with
        historical values along with the timestamp when it was
        recorded. This format is described in detail in <xref
        linkend="history"/>.
      </para>
    </section>
  </section>
  <section id="mbean-serverhandler">
    <title>Server Handler</title>
    <para>
      The MBean <emphasis
      role="bold">jolokia:type=ServerHandler</emphasis> has a single
      operation <methodname>mBeanServersInfo</methodname> with no
      arguments. This operation can be used to dump out the name of
      all registered MBeans on all found MBeanServers. It is helpful to
      get a quick and condensed overview of the available JMX
      information. 
    </para>
  </section>
</chapter>
