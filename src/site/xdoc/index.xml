<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009-2013 Roland Huss
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<document>
  
  <properties>
    <title>Overview</title>
    <author email="roland@jolokia.org">Roland Huss</author>
  </properties>

  <head>
    <meta name="description" content="Jolokia is an alternative to JSR-160 connectors for remote JMX access. It provides REST-like access to JMX with JSON over HTTP."/>
    <link rel="alternate" 
          type="application/rss+xml" 
          title="Jolokia" 
          href="http://labs.consol.de/tags/jolokia/feed" />
    <script type="text/javascript" src="js/flattr.js"></script>
  </head>

  <body>
    <div class="teaser">
      <strong>Jolokia</strong> is remote JMX with JSON over HTTP.<br/>
      <div class="subtitle">It is fast, simple, polyglot and has unique features. 
      It's JMX on <a href="http://en.wikipedia.org/wiki/Capsaicin">Capsaicin</a>.</div>
    </div>
    <p>
      Jolokia is a JMX-HTTP bridge giving an alternative to JSR-160
      connectors.  It is an agent based approach with support for many
      platforms. In addition to basic JMX operations it enhances JMX
      remoting with unique features like bulk requests and fine grained
      security policies. 
    </p>
    <subsection name="Starting points">
      <div style="float:right; margin-right: 5px; margin-left: 5px">
        <div style="float: right; margin-left: 5px; margin-right: 5px;">
          <a class="FlattrButton" style="display:none; float: right;"
             href="http://www.jolokia.org"></a> 
        </div>
      </div>        
      <ul>
        <li>
          Overview of <a href="features-nb.html">features</a> which
          make Jolokia unique for JMX remoting.
        </li>
        <li>          
          The <a href="documentation.html">documentation</a> includes
          a <a href="tutorial.html">tutorial</a> and a <a
          href="reference/html/index.html">reference manual</a>.
        </li>
        <li>
          <a href="agent.html">Agents</a> exist for many
          platforms (JEE, OSGi, Mule, JVM).          
        </li>
        <li>
          <a href="support.html">Support</a> is available through various channels.
        </li>
        <li>
          <a  href="support.html#Source">Contributions</a> are highly appreciated, too.
        </li>
      </ul>
      <span style="clear: both;"></span>          
    </subsection>
    <section name="News">
      <subsection name="Stopover on the road to 2.0: Jolokia 1.1.2 released">
        <div class="news-date">2013-05-28</div>
        <p>
          In order to ease waiting for 2.0, Jolokia version 1.1.2 has been released. It contains some minor
          bug fixes as explained in the <a href="changes-report.html">changelog</a>. Depending on the bug reports and
          pull request dropping in there might be even a 1.1.3 release before 2.0 will be finished.
        </p>
        <p>
          In the meantime, you can also see Jolokia live at <a href="http://www.jayday.de/">JayDay</a> where I will give a talk about
          Jolokia's JavaScript support. The forthcoming JMX notification support will presented, too. It is also
          a good chance to have a cold bavarian beer with me ;-)
        </p>
      </subsection>
      <subsection name="Some small goodies served by 1.1.1">
        <div class="news-date">2013-03-27</div>
        <p>
          This last feature release before work on 2.0.0 starts brings
          some small goodies.  
        </p>
        <ul>
          <li>
            <code>BigDecimal</code> and <code>BigInteger</code> can
            now be used for operation arguments and return values.
          </li>
          <li>
            A new processing parameter <a href="reference/html/protocol.html#processing-parameters"><code>ifModifiedSince</code></a>
            has been introduced. This parameter can be used with a
            timestamp for fetching the list of available MBeans only
            when there has been some changes in the MBean registration
            on any observed MBeanServer since that time. If there has
            been no changes an answer with status code "302" (Not
            modified) is returned. This feature is also supported for
            "search" requests. In a future version of Jolokia, there
            will be also custom support for own "read" and "exec"
            request so that expensive operations can be called
            conditionally. 
          </li>
          <li>
            For the JVM agent, if a port of 0 is given, then an
            arbitrary free port will be selected and printed out on
            standard output as part of the Jolokia agent URL. If no
            host is given, the JVM agent will now bind to localhost
            and if host of "0.0.0.0" or "*" is provided, the agent
            will bind on all interfaces.
          </li>
          <li>
            For the Java client an extra property
            <code>errorValue</code> has been added which holds the
            JSON serialized exception if the processiong parameter
            <code>serializeException</code> is active.
          </li>
          <li>
            The JavaScript client's <a
            href="reference/html/clients.html#js-poller"><code>jolokia.register()</code></a>
            can now take an optional <code>config</code> element for
            specifying processing parameters for a certain scheduler
            job. Also, the new option <code>onlyIfModified</code> can
            be used so that the callback for list and search request
            is only called, if the set of registered MBean has
            changed. This is especially useful for web based client
            which want to refresh the MBean tree only if there are
            changes.
          </li>
          <li>
            The <code>Expires:</code> header of a Jolokia response
            has now a valid date as value (instead of '-1') which
            points to one hour in the past. This change should help
            clients which do not ignore according to RFC-2616 invalid
            date syntax and treat them as 'already expired'.
          </li>
        </ul>
        <p>
          Links to the corresponding GitHub issues and the bugs fixed
          in this release can be found in the <a
          href="changes-report.html">change report</a>.
        </p>
        <p>
          This is the last feature release in the 1.x series. Work has
          already started on exciting new features for Jolokia
          2.0. E.g. JMX notification support is coming, an initial
          pull model has been already implemented (on branch <a
          href="https://github.com/rhuss/jolokia/tree/notification">notification</a>). There
          are even more ideas and some refactorings will happening
          along with some modest changes in the module structure. So,
          please stay tuned ...
        </p>       
      </subsection>
      <subsection name="1.1.0 with Spring support and @JsonMBean">
        <div class="news-date">2013-02-26</div>
        <p>
          It took some time, but it was worth it. Along with the usual bug fix parade,
          several new features has been added to Jolokia.
        </p>
        <p>
          A new module <code>jolokia-spring</code> has been added which makes integration of Jolokia in
          Spring applications even easier. Simply add the following line (along with the corresponding namespace) to you
          application context and agent will be fired up during startup:
        </p>
        <pre class="prettyprint lang-xml"><![CDATA[<jolokia:agent>
   <jolokia:config
           autoStart="true"
           host="0.0.0.0"
           port="8778"
   ....
   />
</jolokia:agent>]]></pre>
        <p>
          More details can be found here in the <a href="reference/html/jmx.html#jvm-spring">reference manual</a>.
        </p>
        <p>
          The new <code>jolokia-jmx</code> module provides an own
          MBeanServer which never gets exposed via JSR-160
          remoting. By registering your MBeans at the Jolokia
          MBeanServer you can make them exclusively available for
          Jolokia without worrying about JSR-160 access e.g. via
          <code>jconsole</code>. However, if you annotate your MBeans
          with <code>@JsonMBean</code> and register it at the Jolokia
          MBeanServer your get automatic translation of complex data
          types to JSON even for JSR-160 connections:
        </p>
        <div>
          <img src="images/jconsole-json-mbean.png"/>
        </div>
        <p>
          The details can be found <a href="reference/html/jmx.html">here</a>.
        </p>
        <p>
          Several new processing options enter the scene. These can be
          given either as global configuration parameters or as query
          parameters:
        </p>
        <ul>
          <li><strong>canonicalNaming</strong> influences the order of key properties in object names</li>
          <li><strong>serializeExceptions</strong> adds a JSON representation of exceptions in an error case</li>
          <li><strong>includeStackTrace</strong> can switch on/off the sending of an lengthy stack trace in an error case</li>
        </ul>
        <p>
          That's it for now, all changes are summarized as always in the <a href="changes-report.html">change report</a>.
        </p>
        <p>Some other, more organizational stuff for now:</p>
        <ul>
          <li>
            Bugtracking and feature requests switch over completely to <a href="https://github.com/rhuss/jolokia/issues">Github</a>.
            Since I'm currently collecting features for 2.0, it's a good time for feature requests ;-). All ideas entered
            at <a href="http://jolokia.idea.informer.com/">jolokia.idea.informer.com</a> has been transformed into Github issues.
          </li>
          <li>
            If you are close to Germany it might be of interest to you, that I'm giving a training on Jolokia and Jmx4Perl,
            with focus on Java Monitoring with Nagios. This will happen at 16./17.04.2013 in Munich, details can be
            found on our <a href="http://www.consol.de/open-source-monitoring/schulungen/java-monitoring-mit-nagios/">web site</a>
            (in german).
          </li>
        </ul>
        <p>
          And finally a very <strong>hot</strong> recommendation: Please have a look at <a href="http://hawt.io">hawt.io</a> a super cool
          HTML5 console which uses Jolokia for backend communication exclusively. Most of the new ideas included in this
          Jolokia release were inspired by discussions with James Strachan, one of the driving forces behind hawt. Thanks for that ;-)
        </p>
      </subsection>
      <subsection name="1.0.6 cosmetics">
        <div class="news-date">2012-11-23</div>
        <p>
          Although it has been quite calm in Jolokia land for some
          months, there is quite some momentum around Jolokia. This
          minor release brings some cosmetic changes, mostly for
          tuning the ordering within MBeans names and some JavaScript
          fixes. More on this in the <a
          href="changes-report.html">changelog</a>.
        </p>
        <p>
          Some other tidbits:
        </p>
        <ul>
          <li>The new <a href="talks.html">Talks and Screencast</a> section collects some fancy multimedia introducing Jolokia</li>
          <li>I'm going to talk about Jolokia at <a href="http://www.jayday.de/?lang=en">jayday 2012</a>, a brand new, low cost
          conference in Munich on 3th December 2012. Hopefully there will be some brand new stuff to show, too.</li>
          <li>Some completely irrelevant stuff: Jolokia T-Shirts can be found in the <a href="http://jolokia.spreadshirt.de/">Jolokia Shop</a>
            The shop was too easy to setup for not doing it ;-) And they look freaking hot .... </li>
        </ul>
      </subsection>
      <subsection name="Cubism support in 1.0.5">
        <div class="news-date">2012-07-22</div>
        <p>
          Jolokia 1.0.5 has been released. Beside minor <a
          href="changes-report.html">improvements and bug fixes</a>,
          one great new feature has been introduced: As already
          mentioned Jolokia has now support for <a
          href="http://square.github.com/cubism/">Cubism</a>, a fine
          time series charting library based on <a
          href="http://d3js.org/">d3.js</a>. Cubism provides
          support for an innovative charting type, the <a
          href="http://vis.berkeley.edu/papers/horizon/">horizon
          charts</a>:
        </p>
        <div>
          <img src="images/jolokia_cubism_demo_2.png"/><br/>
          <img src="images/jolokia_cubism_demo_1.png"/>
        </div>
        <p>
          A very cool live demo where a Jolokia JavaScript client
          fetches live data from our servers and plot it with Cubism
          can be found on this <a
          href="client/javascript-cubism.html">demo page</a>.
          The documentation can be found in the <a href="reference/html/clients.html#js-cubism">reference manual</a>.
        </p>
        <p>
          Jolokia uses also a <a
          href="http://travis-ci.org/#!/rhuss/jolokia">Travis</a>
          build in addition to our own <a
          href="http://labs.consol.de/hudson">CI Server</a>. (Did I
          mentioned already, that we have a quite I high <a
          href="http://labs.consol.de/sonar/dashboard/index/org.jolokia:jolokia">Sonar</a> score
          ?). Travis is a quite nice supplement to Github, and brings CI
          testing to a higher level.
        </p>
        <p>
          That's it for now. The next months of my open-source work
          will be spent now on <a
          href="https://github.com/rhuss/aji">Ají</a>, Jolokia's new
          fancy sister. Sorry for pushing thinks like notifications
          down the Jonlokia back-log, but it's not forgotten.
        </p>
      </subsection>
      <subsection name="1.0.4 introduces a Javascript request scheduler">
        <div class="news-date">2012-06-07</div>
        <p>
          Beside some <a href="changes-report.html">bug fixes</a> two
          new features are included in this new release:
        </p>
        <p>
          Jolokia's Javascript library has now a scheduler for
          periodically querying the agent. Requests can be registered
          at the agent and all registered requests are sent at once in
          a single bulk request periodically. This is especially
          useful when building up dashboard like web pages with
          multiple charts.
        </p>
        <p>
          The folowing example registers two requests which are called
          every second. The <a
          href="reference/html/clients.html#js-poller">reference
          documentation</a> has all the details.
        </p>
        <pre class="prettyprint lang-javascript">var jolokia = new Jolokia("http://localhost:8080/jolokia");

          // Register request along with callback printing out
// the heap memory usage
jolokia.register(function(resp) {
   console.log("Memory: " + resp.value);
},{ 
    type:"read", 
    mbean:"java.lang:type=Memory", 
    attribute:"HeapMemoryUsage", 
    path:"used"
});

// Start the scheduler for calling the request every second
jolokia.start(1000);</pre>
        <p>
          The scheduler is used by the new Jolokia-<a
          href="http://square.github.com/cubism/">Cubism</a>
          integration for plotting real time JMX data. Please have a
          look at the <a href="client/javascript-cubism.html">demo
          page</a> for more information about using Jolokia together
          with Cubism.
        </p>
        <p>
          On the agent side detectors now support custom options. The
          first option available is for the Glassfish detector to
          prevent booting of the AMX subsystem, which registers the
          most interesting MBeans. AMX is booted now by default on the
          first request when running in Glassfish. For more
          information, please refer to the <a
          href="reference/html/agents.html#war-agent-installation">WAR
          configuration options</a> in the reference documentation.
        </p>
        <p>
          <a href="https://github.com/rhuss/aji">Ají</a> moves on,
          too, although slower than expected. The main focus of the
          next months will to be bring that Javascript JMX application
          on and out. Stay tuned ...
        </p>
      </subsection>
      <subsection name="1.0.3 with CORS support">
        <div class="news-date">2012-04-11</div>
        <p>
          This minor release adds cross-origin resource sharing (<a href="http://www.w3.org/TR/cors/">CORS</a>)
          support to all Jolokia agents. Cross domain access can be
          easily restricted with Jolokia's <a
                href="features/security.html">security setup</a>. The <a
                href="client/javascript.html">Javascript</a> library already
          support CORS for most browsers out of the box, for IE8 and
          larger some special setup is still required. Transparent
          CORS client support for all browsers will be added to the
          Jolokia Javascript client in one of the next releases.
        </p>
        <p>
          In addition the following new features were added:
        </p>
        <ul>
          <li><a
                  href="https://github.com/amdjs/amdjs-api/wiki/AMD">AMD</a>
            support for jolokia.js and jolokia-simple.js</li>
          <li>Time based eviction of historical values remembered on
            the client side, in addition to count based eviction</li>
          <li>New configuration option <code>httpServiceFilter</code>
            for the OSGi agent for selection of a specific HttpService
            to bind to.</li>
          <li>None-caching headers added to the response</li>
        </ul>
        <p>
          All thdeses changes plus the bug fixes are listed in the <a
                href="changes-report.html">change log</a>.
        </p>
        <p>
          Starting with this release, bug tracking and release planning
          switches over to Jolokia's <a
                href="http://jolokia.jira.com">JIRA</a> instance, kindly
          donated by the fine folks from <a
                href="http://www.atlassian.com">Atlassian</a>.
        </p>
        <p>
          Also, there has been some (minor) progress with the new kid in
          the Chili garden, <a
                href="https://github.com/rhuss/aji">Ají</a>, a Javascript
          single-page-application with an MBeanBrowser and a
          Dashboard. I'm still looking for helping hands, there is
          quite a lot to do here ;-)
        </p>
      </subsection>
  </section>
</body>

</document>

