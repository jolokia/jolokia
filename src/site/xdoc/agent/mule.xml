<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009-2013 Roland Huss
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  
  <properties>
    <title>Mule Agent - Installation</title>
    <author email="roland@jolokia.org">Roland Huss</author>
  </properties>

  <body>
    <section name="Mule Agent Installation">
      <p>
        Jolokia has also a <a href="http://www.mulesoft.org">Mule
        ESB</a> agent which can be deployed on the Mule ESB (running
        in standalone mode).
      </p>
      <p>
        The agent jar needs to be stored within the Mule
        installation in <code>lib/opt/</code>. Additionally, the Mule
        configuration needs to be adapted to contain the following
        section:
      </p>      
      <pre class="prettyprint"><![CDATA[
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:management="http://www.mulesoft.org/schema/mule/management"
    xmlns:spring="http://www.springframework.org/schema/beans" 
    xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core 
             http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
       http://www.springframework.org/schema/beans 
             http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
       http://www.mulesoft.org/schema/mule/management 
             http://www.mulesoft.org/schema/mule/management/3.1/mule-management.xsd">

   <!-- .... -->
   <custom-agent name="jolokia-agent" class="org.jolokia.mule.JolokiaMuleAgent">
      <spring:property name="port" value="8899"/>
   </custom-agent>
   <management:jmx-server/>
</mule>]]></pre>
      <p>
        Starting up mule should yield a startup message like 
      </p>
      <pre><![CDATA[
**********************************************************************
* Mule ESB and Integration Platform                                  *
* Version: 3.1.2 Build: 21975                                        *
* MuleSoft, Inc.                                                     *
* For more information go to http://www.mulesoft.org                 *
*                                                                    *
* Server started: 8/26/11 11:26 PM                                   *
* JDK: 1.6.0_26 (mixed mode)                                         *
* OS: Mac OS X (10.6.8, x86_64)                                      *
* Host: dev4.local (10.9.11.128)                                     *
* Agents Running:                                                    *
*   Wrapper Manager: Mule PID #0, Wrapper PID #861                   *
*   Jolokia Agent: http://localhost:8899/jolokia                     *
*   JMX Agent                                                        *
**********************************************************************]]></pre>
      <p>
        Note the URL for the Jolokia agent which can be used by a client like <code>jmx4perl</code>,
        <code>check_jmx4perl</code> or <code>j4psh</code> like
      </p>
      <pre>
 jmx4perl http://localhost:8899/jolokia list</pre>
      <p>
        which will result in an output similar to
      </p>
      <pre>
 Mule.myMule:
    Mule.myMule:name=AllStatistics,type=org.mule.Statistics
        Attributes:
            Enabled                             boolean
        Operations:
            void logSummary()                   
            java.lang.String printXmlSummary()  
            java.lang.String printHtmlSummary() 
            void clear()                        
            java.lang.String printCSVSummary()  
 
 ....
 java.lang:
    java.lang:type=Memory
        Attributes:
            NonHeapMemoryUsage                  CompositeData [ro] 
            ObjectPendingFinalizationCount      int [ro]
            Verbose                             boolean
            HeapMemoryUsage                     CompositeData [ro]
        Operations:
            void gc()</pre>
      <p>
        Note that Mule was started here with a server id myMule (startup
        option: <code>-M-Dmule.serverId=myMule</code>). As you can see you have
        access to the Mule specific MBeans and the Java platform MXBeans
        (which BTW is not easy achievable using Mules JSR-160 agents
        directly).
      </p>
      <p>
        For enabling basic security the properties user and password can be set:
      </p>
      <pre class="prettyprint"><![CDATA[
 <custom-agent name="jolokia-agent" class="org.jolokia.mule.JolokiaMuleAgent">
   <spring:property name="user" value="roland"/>
   <spring:property name="password" value="wtf"/>
 </custom-agent>
 <management:jmx-server/>]]></pre>
      <p>
        On the client side the options <code>--user</code> and <code>--password</code> can be
        used with <code>jmx4perl</code> and <code>check_jmx4perl</code> for specifying the
        credentials.
      </p>
      <p>
        Finally, all other options as specified as init parameters in
        <code>jolokia.war</code>s web.xml can be used as properties here as well.
      </p>
    </section>
  </body>
</document>