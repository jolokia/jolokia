<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009-2013 Roland Huss
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  
  <properties>
    <title>Jmx4Perl</title>
    <author email="roland@jolokia.org">Roland Huss</author>
  </properties>

  <body>
    <section name="Jmx4Perl">
      <p>
        As described in this <a href="../about.html">story</a>, Jolokia has its origins
        in the Perl world where it starts as a simple solution for monitoring
        Java JEE applications with
        <a href="http://www.nagios.org">Nagios</a>. <a href="http://www.jmx4perl.org">Jmx4perl</a>
        was its former name, which in addition the agents contains
        powerfule Perl modules for accessing Jolokia instrumented
        servers. This modules are the fundaments for tools like
        <strong>check_jmx4perl</strong>, a Nagios plugin with a rich feature set,
        <strong>jmx4perl</strong>, a command line utility for accessing the agents and
        <strong>j4psh</strong>, a readline based remote JMX shell.
      </p>
      <p>
        Jmx4perl requests looks like
      </p>
      <pre class="prettyprint lang-perl">
   use strict;
   use JMX::Jmx4Perl;
   use JMX::Jmx4Perl::Alias;   # Import MBean aliases 

   # Basic usage
   print "Memory Used: ",
          JMX::Jmx4Perl
              ->new(url => "http://localhost:8080/jolokia")
              ->get_attribute(MEMORY_HEAP_USED);

   # Advanced:
   my $jmx = new JMX::Jmx4Perl(url => "http://localhost:8080/jolokia",
                               product => "jboss");
   my $request = new JMX::Jmx4Perl::Request({type => READ,
                                             mbean => "java.lang:type=Memory",
                                             attribute => "HeapMemoryUsage",
                                             path => "used"});
   my $response = $jmx->request($request);
   print "Memory used: ",$response->value(),"\n";
        </pre>
        <p>
          More information about jmx4perl can be found on its
          <a href="http://search.cpan.org/~roland/jmx4perl/">CPAN page</a> and on
          <a href="http://labs.consol.de">labs.consol.de</a>
        </p>
    </section>
  </body>
</document>