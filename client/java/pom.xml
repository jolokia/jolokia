<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009-2013 Roland Huss
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>jolokia-client-java</artifactId>
  <version>2.0.2-SNAPSHOT</version>
  <packaging>bundle</packaging>

  <name>jolokia-client-java</name>
  <description>Jolokia :: Client :: Java</description>

  <parent>
    <groupId>org.jolokia</groupId>
    <artifactId>jolokia-parent</artifactId>
    <version>2.0.2-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <url>https://jolokia.org/</url>

  <dependencies>

    <!-- Jolokia own artifacts -->

    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-tools-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-server-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-server-detector</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-service-serializer</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-service-jsr160</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-it-core</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- JSON -->

    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
    </dependency>

    <!-- JakartaEE dependencies -->

    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Test dependencies -->

    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Other dependencies -->

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${version.org.eclipse.jetty}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.jetty.toolchain</groupId>
          <artifactId>jetty-jakarta-servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${version.org.eclipse.jetty}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <instructions>
            <Export-Package>
              org.jolokia.client.*
            </Export-Package>
            <Bundle-SymbolicName>org.jolokia</Bundle-SymbolicName>
            <Bundle-Description>Jolokia client library</Bundle-Description>
          </instructions>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <reuseForks>false</reuseForks>
          <forkCount>1</forkCount>
          <argLine>
            -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=45888 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost
            -Dcom.sun.management.jmxremote.serial.filter.pattern=java.lang.*;java.lang.reflect.Proxy;java.math.BigInteger;java.math.BigDecimal;java.util.*;javax.management.*;javax.management.modelmbean.*;javax.management.monitor.*;javax.management.openmbean.*;javax.management.relation.*;javax.management.remote.*;javax.management.remote.rmi.*;javax.management.timer.*;javax.rmi.ssl.*;java.rmi.MarshalledObject;java.rmi.dgc.*;java.rmi.server.*;javax.security.auth.Subject;org.json.simple.*;org.jolokia.**;java.io.Serializable;!*
          </argLine>
          <systemPropertyVariables>
            <jdk.serialFilter>java.lang.*;java.lang.reflect.Proxy;java.math.BigInteger;java.math.BigDecimal;java.util.*;javax.management.*;javax.management.modelmbean.*;javax.management.monitor.*;javax.management.openmbean.*;javax.management.relation.*;javax.management.remote.*;javax.management.remote.rmi.*;javax.management.timer.*;javax.rmi.ssl.*;java.rmi.MarshalledObject;java.rmi.dgc.*;java.rmi.server.*;javax.security.auth.Subject;org.json.simple.*;org.jolokia.**;java.io.Serializable;!*</jdk.serialFilter>
            <!-- see com.sun.management.jmxremote.serial.filter.pattern property in $JAVA_HOME/conf/management/management.properties -->
            <com.sun.management.jmxremote.serial.filter.pattern>java.lang.*;java.lang.reflect.Proxy;java.math.BigInteger;java.math.BigDecimal;java.util.*;javax.management.*;javax.management.modelmbean.*;javax.management.monitor.*;javax.management.openmbean.*;javax.management.relation.*;javax.management.remote.*;javax.management.remote.rmi.*;javax.management.timer.*;javax.rmi.ssl.*;java.rmi.MarshalledObject;java.rmi.dgc.*;java.rmi.server.*;javax.security.auth.Subject;org.json.simple.*;org.jolokia.**;java.io.Serializable;!*</com.sun.management.jmxremote.serial.filter.pattern>
          </systemPropertyVariables>
          <!--<argLine>-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=45888 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000</argLine>-->
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
